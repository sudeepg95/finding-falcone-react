{"version":3,"sources":["Components/Outcome/OutcomeComponent.jsx"],"names":["OutcomeComponent","props","outcome","aftermath","totalTime","history","push","this","actions","clearOutcome","status","planetName","planet_name","outcomeError","error","className","src","process","alt","type","onClick","startOver","length","React","PureComponent","withRouter","connect","state","dispatch","bindActionCreators","OutcomeActions"],"mappings":"4vBAOA,IAQMA,E,YACJ,WAAYC,GAAQ,IAAD,sBACjB,4CAAMA,IADW,MAKbA,EAFFC,QAAWC,EAHI,EAGJA,UAAWC,EAHP,EAGOA,UACtBC,EACEJ,EADFI,QAJe,OAMZF,GAA2B,IAAdC,GAChBC,EAAQC,KAAK,yBAPE,E,yEAWN,IAAD,EACmBC,KAAKN,MAA1BO,EADE,EACFA,QAASH,EADP,EACOA,QACjBG,EAAQC,eACRJ,EAAQC,KAAK,O,+BAGL,IAAD,SAOHC,KAAKN,MALPC,QAFK,IAGHC,UAAaO,EAHV,EAGUA,OAAqBC,EAH/B,EAGkBC,YACrBR,EAJG,EAIHA,UACOS,EALJ,EAKHC,MAGJ,OACE,oCACE,yBAAKC,UAAU,aACb,yBAAKC,IAAG,UAAKC,yBAAL,oBAA+CC,IAAI,iBAEjD,YAAXR,GACC,yBAAKK,UAAU,YACb,gDACA,uBAAGA,UAAU,eAAb,iEAGA,uBAAGA,UAAU,eAAb,eAAwCX,GACxC,uBAAGW,UAAU,eAAb,iBAA0CJ,IAGlC,YAAXD,GACC,yBAAKK,UAAU,YACb,2CACA,uBAAGA,UAAU,eAAb,yEAGA,uBAAGA,UAAU,eAAb,gBAAyCX,IAG7C,yBAAKW,UAAU,eACb,4BAAQI,KAAK,SAASC,QAAS,kBAAM,EAAKC,cAA1C,eAIDR,EAAaS,OAAS,GACrB,yBAAKP,UAAU,aACb,2BAAIF,S,GAzDeU,IAAMC,eAiEtBC,sBACbC,aA1EsB,SAAAC,GAAK,MAAK,CAChCzB,QAASyB,EAAMzB,YAGU,SAAA0B,GAAQ,MAAK,CACtCpB,QAASqB,YAAmB,EAAD,GAAMC,KAAkBF,MAqEnDF,CAGE1B","file":"static/js/34.e0f8ddd6.chunk.js","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { OutcomeActions } from '../../Store/Actions';\n\nconst mapStateToProps = state => ({\n  outcome: state.outcome\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ ...OutcomeActions }, dispatch)\n});\n\nclass OutcomeComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      outcome: { aftermath, totalTime },\n      history\n    } = props;\n    if (!aftermath || totalTime === 0.0) {\n      history.push('/solve/select-planets');\n    }\n  }\n\n  startOver() {\n    const { actions, history } = this.props;\n    actions.clearOutcome();\n    history.push('/');\n  }\n\n  render() {\n    const {\n      outcome: {\n        aftermath: { status, planet_name: planetName },\n        totalTime,\n        error: outcomeError\n      }\n    } = this.props;\n    return (\n      <>\n        <div className=\"image-box\">\n          <img src={`${process.env.PUBLIC_URL}/space-badge.png`} alt=\"space-badge\" />\n        </div>\n        {status === 'success' && (\n          <div className=\"text-box\">\n            <h3>Congratulations!</h3>\n            <p className=\"description\">\n              You were able to find Falcone. King Shan is mightily pleased.\n            </p>\n            <p className=\"description\">Time taken: {totalTime}</p>\n            <p className=\"description\">Planet found: {planetName}</p>\n          </div>\n        )}\n        {status !== 'success' && (\n          <div className=\"text-box\">\n            <h3>You failed!</h3>\n            <p className=\"description\">\n              You were not able to find Falcone. King Shan is going to execute you.\n            </p>\n            <p className=\"description\">Time wasted: {totalTime}</p>\n          </div>\n        )}\n        <div className=\"buttons-box\">\n          <button type=\"button\" onClick={() => this.startOver()}>\n            Start over\n          </button>\n        </div>\n        {outcomeError.length > 0 && (\n          <div className=\"error-box\">\n            <p>{outcomeError}</p>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(OutcomeComponent)\n);\n"],"sourceRoot":""}