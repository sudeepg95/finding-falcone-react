{"version":3,"sources":["Components/Item/ItemComponent.jsx","Components/SelectPlanets/SelectPlanetsComponent.jsx"],"names":["ItemComponent","props","type","item","isSelected","selectItem","className","role","onClick","src","process","name","alt","distance","vehicles","selectedVehicles","selectedVehicleForPlanet","vehiclesDOMMap","map","vehicle","index","max_distance","noOfTimesCurrentVehicleUsed","Object","values","selectedVehicle","filter","selectedVehicleName","length","remainingVehicle","total_no","currentVehicleSelected","key","SelectPlanetsComponent","actions","fetchPlanetsData","planet","this","outcome","selectedPlanets","findIndex","selectPlanet","planets","planetError","error","outcomeError","planetsDOMMap","planetIndexIfExists","to","React","Component","withRouter","connect","state","dispatch","bindActionCreators","PlanetActions","OutcomeActions"],"mappings":"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","file":"static/js/28.ed4da56e.chunk.js","sourcesContent":["import React from 'react';\n\nconst ItemComponent = props => {\n  const { type, item, isSelected, selectItem } = props;\n  if (type === 'planets') {\n    return (\n      <div\n        className=\"item\"\n        role=\"presentation\"\n        onClick={() => typeof selectItem === 'function' && selectItem()}\n      >\n        {isSelected && (\n          <div className=\"item-overlay\">\n            <p>Selected</p>\n          </div>\n        )}\n        <div className=\"item-img\">\n          <img src={`${process.env.PUBLIC_URL}/${type}/${item.name}.png`} alt={item.name} />\n        </div>\n        <div className=\"item-details\">\n          <h3>{item.name}</h3>\n          <p>\n            <span className=\"bolder\">Distance &nbsp;-&nbsp;</span>\n            {item.distance}\n            <span className=\"normal\">&nbsp;megamiles</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (type === 'vehicles') {\n    const { vehicles, selectedVehicles } = props;\n    const selectedVehicleForPlanet = selectedVehicles[item.name]\n      ? selectedVehicles[item.name].name\n      : null;\n    const vehiclesDOMMap = vehicles.map((vehicle, index) => {\n      if (item.distance <= vehicle.max_distance) {\n        const noOfTimesCurrentVehicleUsed = Object.values(selectedVehicles)\n          .map(selectedVehicle => selectedVehicle.name)\n          .filter(selectedVehicleName => selectedVehicleName === vehicle.name).length;\n        const remainingVehicle = vehicle.total_no - noOfTimesCurrentVehicleUsed;\n        const currentVehicleSelected =\n          selectedVehicleForPlanet && selectedVehicleForPlanet === vehicle.name;\n        return (\n          <div\n            className=\"vehicle-details\"\n            key={`vehicle-${index}`}\n            role=\"presentation\"\n            onClick={() => typeof selectItem === 'function' && selectItem(vehicle)}\n          >\n            {currentVehicleSelected && (\n              <div className=\"vehicle-overlay\">\n                <p>Selected</p>\n              </div>\n            )}\n            {remainingVehicle === 0 && !currentVehicleSelected && (\n              <div className=\"vehicle-overlay error\" />\n            )}\n            <div className=\"item-img\">\n              <img\n                src={`${process.env.PUBLIC_URL}/${type}/${vehicle.name}.png`}\n                alt={vehicle.name}\n              />\n            </div>\n            <div>\n              <h3>{vehicle.name}</h3>\n              <p>\n                <span className=\"bolder\">Range &nbsp;-&nbsp;</span>\n                {vehicle.max_distance}\n                <span className=\"normal\">&nbsp;megamiles</span>\n              </p>\n              <p>\n                <span className=\"bolder\">Available&nbsp;-&nbsp;</span>\n                {remainingVehicle}\n                <span className=\"normal\">&nbsp;no&apos;s</span>\n              </p>\n            </div>\n          </div>\n        );\n      }\n      return null;\n    });\n    return <div className=\"vehicles-list\">{vehiclesDOMMap}</div>;\n  }\n\n  return null;\n};\n\nexport default ItemComponent;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ItemComponent from '../Item/ItemComponent';\nimport { PlanetActions, OutcomeActions } from '../../Store/Actions';\n\nconst mapStateToProps = state => ({\n  planet: state.planet,\n  outcome: state.outcome\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ ...PlanetActions, ...OutcomeActions }, dispatch)\n});\n\nclass SelectPlanetsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    const { actions } = props;\n    actions.fetchPlanetsData();\n  }\n\n  planetIndexIfExists(planet) {\n    const {\n      outcome: { selectedPlanets }\n    } = this.props;\n    return selectedPlanets.findIndex(item => item.name === planet.name);\n  }\n\n  selectPlanet(planet) {\n    const { actions } = this.props;\n    actions.selectPlanet(planet);\n  }\n\n  render() {\n    const {\n      planet: { planets, error: planetError },\n      outcome: { selectedPlanets, error: outcomeError }\n    } = this.props;\n    const planetsDOMMap = planets.map((planet, index) => (\n      <ItemComponent\n        type=\"planets\"\n        item={planet}\n        key={index}\n        isSelected={this.planetIndexIfExists(planet) > -1}\n        selectItem={() => this.selectPlanet(planet)}\n      />\n    ));\n    return (\n      <>\n        <div className=\"preface-text noselect\">\n          <h3>Select planets you want to search in:</h3>\n          <p>You can only choose 4 planets</p>\n        </div>\n        <div className=\"items-box noselect\">\n          {planets.length > 0 ? planetsDOMMap : 'Could not load list of planets!'}\n        </div>\n        {selectedPlanets.length === 4 && (\n          <div className=\"buttons-box\">\n            <Link to=\"/solve/select-vehicles\">Select Vehicles to send to these planets</Link>\n          </div>\n        )}\n        {planetError.length > 0 && (\n          <div className=\"error-box\">\n            <p>{planetError}</p>\n          </div>\n        )}\n        {outcomeError.length > 0 && (\n          <div className=\"error-box\">\n            <p>{outcomeError}</p>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SelectPlanetsComponent)\n);\n"],"sourceRoot":""}